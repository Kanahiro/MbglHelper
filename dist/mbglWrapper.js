!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=2)}([function(t,e){t.exports={clear(t){t.setStyle({version:8,sources:{},layers:[]},{diff:!1})}}},function(t,e){t.exports={defaultLayerId:function(t,e){let n=0;for(;!r(t,e+String(n));)n+=1;return e+String(n)},cleanOptions:function(t,e){let r=n(e);for(key in t)r[key]=t[key];return r},waitForLoading:function(t,e,r){let n=setInterval((function(){t.isStyleLoaded()&&(clearInterval(n),r())}),e)}};let r=function(t,e){return void 0===t.getLayer(e)},n=function(t){switch(t){case"MultiPolygon":case"Polygon":return{type:"fill",paint:{"fill-color":o(),"fill-opacity":.8}};case"MultiLineString":case"String":return{type:"line",paint:{"line-color":o(),"line-opacity":.8,"line-width":3}};case"Point":return{type:"circle",paint:{"circle-color":o(),"circle-opacity":.8,"circle-radius":5,"circle-stroke-color":"#ffffff","circle-stroke-width":1}};case"raster":return{tileSize:256,attribution:"",minzoom:0,maxzoom:22,paint:{}};case"vector":return{tileSize:512,attribution:"",minzoom:0,maxzoom:22,paint:{}}}},o=function(){return"#"+Math.floor(16777215*Math.random()).toString(16)}},function(t,e,r){let n=r(3),o=r(4),i=r(0);class a{constructor(t){this.map=t}clear(){i.clear(this.map)}add(t,e={}){switch(typeof t){case"string":return void this.addRaster(t,e);case"object":return void this.addGeojson(t,e);default:return}}addRaster(t,e={}){n.add(this.map,t,e)}addGeojson(t,e={}){o.add(this.map,t,e)}}t.exports=a,"undefined"!=typeof window&&(window.MbglWrapper=a)},function(t,e,r){r(0);let n=r(1);t.exports={add:function(t,e,r={}){let o=r.id;void 0===o&&(o=n.defaultLayerId(t,"raster"));let i=n.cleanOptions(r,"raster");n.waitForLoading(t,100,(function(){t.addSource(o,{type:"raster",tiles:[e],tileSize:i.tileSize,attribution:i.attribution}),t.addLayer({id:o,type:"raster",source:o,minzoom:i.minzoom,maxzoom:i.maxzoom,paint:i.paint})}))}}},function(t,e,r){r(0);let n=r(1);t.exports={add:function(t,e,r={}){let i=r.id;void 0===i&&(i=n.defaultLayerId(t,"geojson"));let a=o(e),l=n.cleanOptions(r,a);n.waitForLoading(t,100,(function(){t.addSource(i,{type:"geojson",data:e}),t.addLayer({id:i,type:l.type,source:i,layout:{},paint:l.paint})}))}};let o=function(t){return"FeatureCollection"===t.type?t.features[0].geometry.type:t.geometry.type}}]);